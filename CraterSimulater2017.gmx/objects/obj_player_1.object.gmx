<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ast1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 7
direction = 270

hspd = 0;
movespeed = 15;
hfriction = .2;
haccel = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Sets down to true if S or gamepad D is pressed
key_down = keyboard_check(ord('K')) || gamepad_button_check(1, gp_padd);
key_left = keyboard_check(ord('J')) || gamepad_button_check(1, gp_padl);
key_right = keyboard_check(ord('L')) || gamepad_button_check(1, gp_padr);

//set deadzone for analog
gamepad_set_axis_deadzone(0, 0.25);

gamepad_hor = gamepad_axis_value(1, gp_axislh);
gamepad_ver = gamepad_axis_value(1, gp_axislv);

//hspd = 0;
//gamepad horizontal movement 
if(gamepad_hor != 0){
    if(hspd &gt; -10 &amp;&amp; hspd &lt; 10){
        hspd += haccel * gamepad_hor;
    }
}

if(hspd &gt; 10){
    hspd = 10;
}else if(hspd &lt; -10) {
    hspd = -10;
}

if(!(key_right &amp;&amp; key_left)){
    if(key_right){
        if(hspd &lt; 10)
            hspd += haccel;
        else
            hspd = 10;
    }else if(key_left){
       if(hspd &gt; -10)
            hspd -= haccel;
       else
            hspd = -10;
    }
}

//If player is hitting no dir keys, or both keys, and analog is @ pos 0
if(hspd &gt; 0)
    hspd -= hfriction;
if(hspd &lt; 0)
    hspd += hfriction;

//applies horizontal movement (keep after all calc)
x += hspd;

image_angle = (image_angle + 1) % 360
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
