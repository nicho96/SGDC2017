<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ybar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !audio_is_playing(snd_lobby){
    audio_stop_all();
    audio_play_sound(snd_lobby, 1, true);
}

depth = 100;

bar_pos = 3;

pos1x = 0;
pos1y = 250;

pos2x = 0;
pos2y = 125;

pos3x = 0;
pos3y = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_action = keyboard_check_pressed(vk_space) || keyboard_check_pressed(vk_enter) || gamepad_button_check_pressed(0, gp_face1) || gamepad_button_check_pressed(1, gp_face1);
key_up = keyboard_check_pressed(ord('W')) || keyboard_check_pressed(vk_up) || keyboard_check_pressed(vk_up) || gamepad_button_check_pressed(1, gp_padu) || gamepad_button_check_pressed(0, gp_padu);
key_down = keyboard_check_pressed(ord('S')) || keyboard_check_pressed(vk_down) || gamepad_button_check_pressed(0, gp_padd) || gamepad_button_check_pressed(1, gp_padd);

//Moving yellow bar
if(bar_pos == 1){
    y = pos1y;
    x = pos1x;
}else if(bar_pos == 2){
    y = pos2y;
    x = pos2x;
}else if(bar_pos == 3){
    y = pos3y;
    x = pos3x;
}

//changing position on movement
if(key_up){
    if(bar_pos == 3)
        bar_pos = 1;
    else
        bar_pos ++;
}

if(key_down){
    if(bar_pos == 1)
        bar_pos = 3;
    else
        bar_pos --;
}

//Room selection
if(key_action){
    if(bar_pos == 3){
        room_goto(rm_main);
        audio_stop_all();
    }
    if(bar_pos == 2){
        room_goto(rm_shop);
        audio_stop_all();
    }
    if(bar_pos == 1)
        game_end();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
